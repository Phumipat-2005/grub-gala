import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { useNavigate } from "react-router-dom";
import { ArrowLeft, User, Target, Heart, Clock, MapPin, Phone } from "lucide-react";

interface Persona {
  id: string;
  name: string;
  image: string;
  age: string;
  status: string;
  occupation: string;
  background: string[];
  goals: string[];
  expectations: string[];
  behaviors: string[];
  motivations: string[];
  bgColor: string;
}

const personas: Persona[] = [
  {
    id: "student",
    name: "‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤",
    image: "üë®‚Äçüéì",
    age: "18-23 ‡∏õ‡∏µ",
    status: "‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ ‡∏õ‡∏µ 1-4",
    occupation: "‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå",
    bgColor: "bg-teal-gradient",
    background: [
      "‡∏≠‡∏≤‡∏¢‡∏∏: 18-23 ‡∏õ‡∏µ",
      "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ ‡∏õ‡∏µ 1-4", 
      "‡∏Ñ‡∏ì‡∏∞: ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå",
      "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏´‡∏•‡∏±‡∏Å: ‡∏™‡∏°‡∏≤‡∏£‡πå‡∏ó‡πÇ‡∏ü‡∏ô (iOS/Android), ‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢",
      "‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô: ‡∏ä‡∏≠‡∏ö‡∏™‡∏±‡πà‡∏á‡∏≠‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤, ‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏±‡πà‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô"
    ],
    goals: [
      "‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏à‡πá‡∏ö ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏ô‡∏≤‡∏ô",
      "‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏´‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏•‡∏±‡∏ß‡∏Ç‡∏±‡πâ‡∏ô‡πÉ‡∏î‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå",
      "‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏≠‡∏±‡∏î‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£",
      "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡∏£‡∏á‡∏ï‡∏≤‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì"
    ],
    expectations: [
      "‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏°‡∏µ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤ (30-50 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡∏°‡∏∑‡πâ‡∏≠)",
      "‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢",
      "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏•‡πà‡∏ß‡∏á",
      "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏ö‡∏≤‡∏ô (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5-10 ‡∏ô‡∏≤‡∏ó‡∏µ)",
      "‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ä‡∏ã‡∏¥‡∏á‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö (‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î, QR Code, ‡∏ö‡∏±‡∏ï‡∏£‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤, e-Wallet)"
    ],
    behaviors: [
      "‡∏ô‡∏±‡∏Å‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏∑‡πà‡∏ô‡πÄ‡∏î‡∏¥‡∏ô ‡πÜ ‡∏ó‡∏µ‡πà‡∏¢‡∏≤‡∏Å‡∏°‡∏µ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡πÅ‡∏•‡πâ‡∏ß‡∏ñ‡∏π‡∏Å‡∏°‡∏≤‡∏Å",
      "‡∏Å‡∏≥‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ñ‡∏ô‡πÅ‡∏ô‡πà‡∏ô ‡∏≠‡∏≤‡∏à‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏¢‡πâ‡∏≠‡∏¢‡∏à‡∏≤‡∏Å‡πâ‡∏≤‡∏ô",
      "‡∏£‡∏≠‡∏ö‡∏´‡∏≤‡∏£‡∏ß‡∏¥‡πà‡∏á‡∏ó‡∏∞‡∏•‡πÅ‡∏ô‡πà‡∏ô",
      "‡πÅ‡∏Ç‡∏£‡πá‡∏à‡∏ô‡∏°‡∏π‡∏•‡∏•‡∏≤‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ",
      "‡πÄ‡∏Ç‡πâ‡∏¢‡∏≠‡∏ô‡∏µ‡∏ñ‡πà‡∏≤",
      "‡∏Å‡∏≥‡∏£‡∏∞‡∏°‡∏Ç‡∏•‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏≥ ‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏ä‡πà‡∏≠‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô ‡πÅ‡∏ó‡∏ô"
    ],
    motivations: [
      "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      "‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏ï‡∏±‡∏ô‡∏î‡∏µ‡∏Ñ‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£",
      "‡∏°‡∏µ‡πÇ‡∏†‡∏ä‡∏ô‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏î‡∏õ‡∏π‡πà‡∏¢‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏ä",
      "‡πÄ‡∏ã‡∏µ‡∏¢‡∏•‡πà‡∏ô‡∏µ‡∏î‡∏µ"
    ]
  },
  {
    id: "teacher",
    name: "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå",
    image: "üë®‚Äçüè´",
    age: "30-60 ‡∏õ‡∏µ",
    status: "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢ (‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©)",
    occupation: "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢",
    bgColor: "bg-orange-gradient",
    background: [
      "‡∏≠‡∏≤‡∏¢‡∏∏: 30-60 ‡∏õ‡∏µ",
      "‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô: ‡∏ô‡∏±‡∏Å‡πÉ‡∏™‡πà‡∏á‡∏≤‡∏£‡∏õ‡∏¥‡∏á‡πá‡∏Ñ‡∏≥‡πÄ‡∏ô‡πá‡∏ä ‡∏Ñ‡∏∂‡πà‡∏≠‡∏°‡∏™‡∏∑‡πà‡∏≠‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡πÄ‡∏ã‡∏•‡∏¢‡πå",
      "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢ (‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡πÄ‡∏®‡∏©)"
    ],
    goals: [
      "‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏≠‡∏¢",
      "‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏≠‡∏±‡∏î‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      "‡∏™‡∏±‡πà‡∏ß‡∏≤‡∏Ñ‡∏≥‡∏î‡∏≥‡∏´‡∏ß‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏•‡∏à‡∏î‡∏ó‡∏≥‡∏õ‡πç‡∏≤‡πÄ‡∏õ‡πà‡∏≤"
    ],
    expectations: [
      "‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏±‡πà‡∏á‡∏¢‡πà‡∏≤‡∏° ‡πÉ‡∏ä‡πâ‡πÉ‡∏à‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≤‡∏° (‡πÑ‡∏°‡πà‡πÄ‡∏ô‡∏∑‡πà‡∏≠ 1-2 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á)",
      "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏£‡∏±‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö (‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î, QR Code, ‡∏ö‡∏±‡∏ï‡∏£, e-Wallet)"
    ],
    behaviors: [],
    motivations: [
      "‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤",
      "‡πÑ‡∏î‡πâ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πà‡∏ß‡∏°‡∏£‡∏ß‡∏¢"
    ]
  },
  {
    id: "vendor",
    name: "‡πÅ‡∏°‡πà‡∏Ñ‡πâ‡∏≤", 
    image: "üë©‚Äçüç≥",
    age: "30-50 ‡∏õ‡∏µ",
    status: "‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
    occupation: "‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
    bgColor: "bg-orange-gradient",
    background: [
      "‡∏≠‡∏≤‡∏¢‡∏∏: 30-50 ‡∏õ‡∏µ",
      "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£"
    ],
    goals: [
      "‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô",
      "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤",
      "‡∏•‡∏î‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏∏‡∏°‡∏Ñ‡∏ì‡∏≤‡∏™‡∏Å‡πà‡∏≠‡∏û‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏≥‡∏¢‡∏≤‡πÄ‡∏õ‡∏•‡πà‡∏≤"
    ],
    expectations: [
      "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô",
      "‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏ö‡∏™‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ß‡∏¥‡∏ã‡∏±‡πà‡∏á‡∏∫‡∏Ñ‡∏≥‡∏Å‡∏Å‡∏¥‡∏á‡∏≠‡∏∞",
      "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏à‡∏≥‡∏î‡∏á‡∏Ñ‡∏£‡∏ö‡∏Ñ‡πà‡∏≠‡∏°"
    ],
    behaviors: [],
    motivations: [
      "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢",
      "‡∏õ‡∏£‡∏µ‡∏Å‡∏£‡∏£‡∏≤‡∏™‡∏á‡∏à‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏¢‡∏¥‡∏ô"
    ]
  },
  {
    id: "officer",
    name: "‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
    image: "üëÆ‚Äç‚ôÇÔ∏è", 
    age: "‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢",
    status: "‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏à‡∏∏‡∏î",
    occupation: "‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢",
    bgColor: "bg-orange-gradient",
    background: [
      "‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢",
      "‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏à‡∏∏‡∏î"
    ],
    goals: [
      "‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏à‡∏∏‡∏î‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏á‡∏≤‡∏ô ‡∏ä‡∏∑‡πà‡∏≠‡∏Ø‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏á",
      "‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏î‡∏ß‡∏Å ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤",
      "‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏µ‡∏¢‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≠‡∏Ñ‡∏¥‡∏ß‡πÉ‡∏ô‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á",
      "‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏à‡∏∏‡∏î‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥ ‡πÜ"
    ],
    expectations: [
      "‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ",
      "‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏∏‡∏•‡∏≠‡∏≤‡∏´‡∏≤‡∏£/‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ö‡πÄ‡πÑ‡∏õ‡∏à‡∏î‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏• ‡πÑ‡∏ó‡∏°‡πå",
      "‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≥‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡πÅ‡∏Å‡∏ô QR PromptPay",
      "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏°‡πà‡∏ü‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡∏≤‡∏¢ ‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏Ç‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"
    ],
    behaviors: [
      "‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ",
      "‡∏ã‡∏∑‡πà‡∏≠‡∏°‡∏∏‡∏•‡∏≠‡∏≤‡∏´‡∏≤‡∏£/‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ö‡∏ã‡∏¥‡∏ô‡πÄ‡∏ô‡∏ï‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏• ‡πÑ‡∏ó‡∏°‡πå",
      "‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡πÅ‡∏Å‡∏ô QR PromptPay",
      "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏≤‡∏¢‡∏¢ ‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏Ç‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"
    ],
    motivations: [
      "‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤",
      "‡∏°‡∏µ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏™‡∏≠‡∏ö‡∏≤‡∏£‡πå‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà ‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏°‡∏ô‡∏π‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏à‡∏µ‡πÑ‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏≠‡∏¢‡πà‡∏≤‡∏á"
    ]
  },
  {
    id: "outsider",
    name: "‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å",
    image: "üë®‚Äçüíº",
    age: "‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏£ ‡πÅ‡∏•‡∏∞ ‡∏ú‡∏π‡πâ‡∏°‡∏≤‡∏£‡πà‡∏ß‡∏° ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
    status: "‡πÑ‡∏°‡πà‡∏£‡∏¥‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏ô‡∏Å‡∏°‡∏ô‡∏ß‡∏Å‡πÉ‡πÉ‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏°‡∏≤‡∏Å‡∏ô‡∏±‡∏Å ‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏á‡∏¥‡∏ô",
    occupation: "‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏°‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å",
    bgColor: "bg-orange-gradient",
    background: [
      "‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ô‡∏Ñ‡∏£‡∏≠‡∏á ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏£ ‡πÅ‡∏•‡∏∞ ‡∏ú‡∏π‡πâ‡∏°‡∏≤‡∏£‡πà‡∏ß‡∏° ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
      "‡πÑ‡∏°‡πà‡∏£‡∏¥‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏ô‡∏Å‡∏°‡∏ô‡∏ß‡∏Å‡πÉ‡πÉ‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏°‡∏≤‡∏Å‡∏ô‡∏±‡∏Å ‡πÉ‡∏ä‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏á‡∏¥‡∏ô"
    ],
    goals: [
      "‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏ô‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏ô‡∏≤‡∏ô",
      "‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏∞‡∏î‡∏ß‡∏Å ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤",
      "‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏´‡∏ô‡πâ‡∏≤",
      "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏î‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î‡πÇ‡∏£‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô"
    ],
    expectations: [
      "‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ",
      "‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏∏‡∏•‡∏≠‡∏≤‡∏´‡∏≤‡∏£/‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ã‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏• ‡πÑ‡∏ó‡∏°‡πå",
      "‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡πÅ‡∏Å‡∏ô QR PromptPay",
      "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡πà‡∏≠‡∏á‡πà‡∏≤‡∏¢ ‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏Ç‡∏≠‡∏á‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢"
    ],
    behaviors: [],
    motivations: [
      "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      "‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏Ñ‡∏∑‡∏Ñ‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£"
    ]
  }
];

const Personas = () => {
  const navigate = useNavigate();

  const handleBack = () => {
    navigate(-1);
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-background to-muted p-4">
      <div className="max-w-7xl mx-auto">
        <div className="flex items-center space-x-4 mb-8">
          <Button 
            variant="outline" 
            size="icon"
            onClick={handleBack}
          >
            <ArrowLeft className="w-4 h-4" />
          </Button>
          <div>
            <h1 className="text-4xl font-bold text-primary">User Personas</h1>
            <p className="text-muted-foreground">‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£</p>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
          {personas.map((persona) => (
            <Card key={persona.id} className="hover:shadow-elegant transition-all duration-300">
              <CardHeader className={`${persona.bgColor} text-white rounded-t-lg`}>
                <div className="text-center">
                  <div className="text-6xl mb-4 bg-white/20 w-20 h-20 rounded-full flex items-center justify-center mx-auto">
                    {persona.image}
                  </div>
                  <CardTitle className="text-2xl font-bold">{persona.name}</CardTitle>
                  <p className="text-white/90 text-sm">{persona.age}</p>
                </div>
              </CardHeader>
              
              <CardContent className="p-6 space-y-6">
                {/* Background */}
                <div>
                  <div className="flex items-center space-x-2 mb-3">
                    <User className="w-4 h-4 text-primary" />
                    <h3 className="font-semibold text-primary">‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á (Background)</h3>
                  </div>
                  <ul className="text-sm space-y-1 text-muted-foreground">
                    {persona.background.map((item, index) => (
                      <li key={index} className="flex items-start">
                        <span className="w-1 h-1 bg-primary rounded-full mt-2 mr-2 flex-shrink-0"></span>
                        {item}
                      </li>
                    ))}
                  </ul>
                </div>

                {/* Goals */}
                <div>
                  <div className="flex items-center space-x-2 mb-3">
                    <Target className="w-4 h-4 text-secondary" />
                    <h3 className="font-semibold text-secondary">‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ (Goals)</h3>
                  </div>
                  <ul className="text-sm space-y-1 text-muted-foreground">
                    {persona.goals.map((goal, index) => (
                      <li key={index} className="flex items-start">
                        <span className="w-1 h-1 bg-secondary rounded-full mt-2 mr-2 flex-shrink-0"></span>
                        {goal}
                      </li>
                    ))}
                  </ul>
                </div>

                {/* Expectations */}
                <div>
                  <div className="flex items-center space-x-2 mb-3">
                    <Clock className="w-4 h-4 text-accent" />
                    <h3 className="font-semibold text-accent">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á (Expectations)</h3>
                  </div>
                  <ul className="text-sm space-y-1 text-muted-foreground">
                    {persona.expectations.map((expectation, index) => (
                      <li key={index} className="flex items-start">
                        <span className="w-1 h-1 bg-accent rounded-full mt-2 mr-2 flex-shrink-0"></span>
                        {expectation}
                      </li>
                    ))}
                  </ul>
                </div>

                {/* Behaviors */}
                {persona.behaviors.length > 0 && (
                  <div>
                    <div className="flex items-center space-x-2 mb-3">
                      <Phone className="w-4 h-4 text-muted-foreground" />
                      <h3 className="font-semibold text-muted-foreground">‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ (Behaviors)</h3>
                    </div>
                    <ul className="text-sm space-y-1 text-muted-foreground">
                      {persona.behaviors.map((behavior, index) => (
                        <li key={index} className="flex items-start">
                          <span className="w-1 h-1 bg-muted-foreground rounded-full mt-2 mr-2 flex-shrink-0"></span>
                          {behavior}
                        </li>
                      ))}
                    </ul>
                  </div>
                )}

                {/* Motivations */}
                <div>
                  <div className="flex items-center space-x-2 mb-3">
                    <Heart className="w-4 h-4 text-destructive" />
                    <h3 className="font-semibold text-destructive">‡πÅ‡∏£‡∏á‡∏à‡∏π‡∏á‡πÉ‡∏à (Motivation)</h3>
                  </div>
                  <ul className="text-sm space-y-1 text-muted-foreground">
                    {persona.motivations.map((motivation, index) => (
                      <li key={index} className="flex items-start">
                        <span className="w-1 h-1 bg-destructive rounded-full mt-2 mr-2 flex-shrink-0"></span>
                        {motivation}
                      </li>
                    ))}
                  </ul>
                </div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Personas;